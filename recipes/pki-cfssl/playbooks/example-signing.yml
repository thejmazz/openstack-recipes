---
- name: Gather facts on all hosts

  hosts: all:!type_openstack_compute_floatingip_associate_v2
  become: yes
  become_user: root

- name: Demonstrate example signing request with CFSSL multirootca

  hosts: web:!type_openstack_compute_floatingip_associate_v2
  become: yes
  become_user: root

  vars:
    CFSSL_VERSION: "1.3.2"
    ROOTCA_IPV4: "{{ hostvars[groups['rootca'][0]]['ansible_default_ipv4']['address'] }}"
    LOCAL_IPV4: "{{ ansible_default_ipv4['address'] }}"
    FLOATING_IP: "{{ groups['type_openstack_compute_floatingip_associate_v2'][0] }}"

  handlers:
    - name: restart_nginx
      service:
        daemon_reload: yes
        name: nginx
        state: restarted
        enabled: yes

  roles:
    - role: ansible-go
      go_tarball: go1.10.3.linux-amd64.tar.gz
      go_tarball_checksum: sha256:fa1b0e45d3b647c252f51f5e1204aba049cde4af177ef9f2181f43004f901035
      go_version_target: "go version go1.10.3 linux/amd64"
      go_download_location: "https://dl.google.com/go/{{ go_tarball }}"
      # adds /etc/profile.d/{go-bin,go-path}.sh
      set_go_path: true

  tasks:
    - name: Install build-essential
      apt:
        name: build-essential
        update_cache: yes
    - name: Download cfssl source
      git:
        repo: https://github.com/cloudflare/cfssl
        dest: /root/go/src/github.com/cloudflare/cfssl
        version: "{{ CFSSL_VERSION }}"
    - name: Install CFSSL toolkit
      shell: "/usr/local/go/bin/go install {{ item }}"
      become: true
      become_user: root
      with_items:
        - github.com/cloudflare/cfssl/cmd/cfssl
        - github.com/cloudflare/cfssl/cmd/cfssljson
        - github.com/cloudflare/cfssl/cmd/multirootca
      changed_when: false

    - name: Install nginx
      apt:
        name: nginx
        update_cache: yes

    - name: Ensure /etc/cfssl exists
      file:
        path: /etc/cfssl
        state: directory
        owner: root
        group: root
        mode: 0755
    - name: Copy ca.pem
      copy:
        src: ./pkitest_ca.pem
        dest: /etc/cfssl/ca.pem
        owner: root
        group: root
        mode: 0644
    - name: Copy web-csr.json
      template:
        src: ./web-csr.json
        dest: /etc/cfssl/web-csr.json
        owner: root
        group: root
        mode: 0644
    - name: Copy request-profile.json
      template:
        src: ./request-profile.json
        dest: /etc/cfssl/request-profile.json
        owner: root
        group: root
        mode: 0600
    - name: Generate web cert
      # If the CA cert is in the system then -tls-remote-ca is not needed
      shell: "/root/go/bin/cfssl gencert -config=request-profile.json -tls-remote-ca ca.pem -profile=default web-csr.json | /root/go/bin/cfssljson -bare web"
      args:
        creates: /etc/cfssl/web.pem
        chdir: /etc/cfssl
      # This is here so you can play with modifying the certificate
      notify: restart_nginx

    # For extra security, you may want to delete the request profile which contains the auth_key
    # - name: Delete request-profile.json
    #   file:
    #     path: /etc/cfssl/request-profile.json
    #     state: absent

    - name: Delete /etc/nginx/sites-enabled/default
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
    - name: Copy web.conf
      template:
        src: ./web.nginx.conf
        dest: /etc/nginx/conf.d/web.conf
        owner: root
        group: root
        mode: 0644
      notify: restart_nginx
