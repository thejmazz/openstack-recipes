---
- name: Gitea

  hosts: gitea
  become: yes

  pre_tasks:
    - name: Mount /dev/vdb -> /var/lib/gitea by UUID
      mount:
        path: /var/lib/gitea
        src: "UUID={{ ansible_devices['vdb']['partitions']['vdb1']['uuid'] }}"
        fstype: ext4
        state: mounted
    - name: Mount /dev/vdc -> /home/git/gitea-repositories by UUID
      mount:
        path: /home/git/gitea-repositories
        src: "UUID={{ ansible_devices['vdc']['partitions']['vdc1']['uuid'] }}"
        fstype: ext4
        state: mounted
    - name: Ensure /opt/bin exists
      file:
        path: /opt/bin
        state: directory
        owner: root
        group: root
        mode: 0755

  roles:
    - role: geerlingguy.postgresql
      postgresql_user: postgres
      postgresql_group: postgres

  tasks:
    # === GITEA ===
    - name: Download Gitea binary
      # TODO verify with gpg
      get_url:
        url: https://dl.gitea.io/gitea/1.5/gitea-1.5-linux-amd64
        dest: /opt/bin/gitea
        owner: root
        group: root
        mode: 0755
    - name: Make a git user
      user:
        name: git
    - name: Create Gitea directories owned by root
      file:
        path: "/var/lib/gitea/{{ item }}"
        state: directory
        owner: root
        group: root
        mode: 0755
      with_items:
        - custom
        - public
    - name: Create gitea directories owned by git
      file:
        path: /var/lib/gitea/{{ item }}
        state: directory
        owner: git
        group: git
        mode: 0750
      with_items:
        - data
        - indexers
        - log
    - name: Create /etc/gitea
      file:
        path: /etc/gitea
        state: directory
        owner: root
        group: git
        mode: 0770
    - name: Create gitea database
      become: yes
      become_user: postgres
      postgresql_db:
        name: gitea
    - name: Create gitea postgresql user
      become: yes
      become_user: postgres
      postgresql_user:
        db: gitea
        name: gitea
        password: "{{ gitea_postgres_password }}"
        priv: ALL
    - name: Ensure Postgres gitea user does not have unnecessary privilege
      become: yes
      become_user: postgres
      postgresql_user:
        name: gitea
        role_attr_flags: NOSUPERUSER,NOCREATEDB
    - name: Ensure no other user can access gitea database
      become: yes
      become_user: postgres
      postgresql_privs:
        db: gitea
        role: PUBLIC
        type: database
        priv: ALL
        state: absent

    - name: Ensure /opt/pgdumps exists
      file:
        path: /opt/pgdumps
        state: directory
        owner: root
        group: root
        mode: 0755
    - name: Copy database pgdump
      shell: >
        docker run --rm
        -e MC_HOSTS_backup=http://{{ minio_access_key }}:{{ minio_secret_key }}@{{ minio_host }}
        minio/mc cat backup/gitea-pg-dumps/{{ gitea_pgdump }} > /opt/pgdumps/{{ gitea_pgdump }}
    - name: Restore gitea database
      become: yes
      become_user: postgres
      shell: gunzip < /opt/pgdumps/{{ gitea_pgdump }} | psql gitea
    - name: Create Gitea systemd unit
      copy:
        dest: /etc/systemd/system/gitea.service
        owner: root
        group: root
        mode: 0644
        content: |
          [Unit]
          Description=Gitea (Git with a cup of tea)
          After=syslog.target
          After=network.target
          After=postgresql.service

          [Service]
          # Modify these two values and uncomment them if you have
          # repos with lots of files and get an HTTP error 500 because
          # of that
          ###
          #LimitMEMLOCK=infinity
          #LimitNOFILE=65535
          RestartSec=2s
          Type=simple
          User=git
          Group=git
          WorkingDirectory=/var/lib/gitea/
          ExecStart=/opt/bin/gitea web -c /etc/gitea/app.ini
          Restart=always
          Environment=USER=git HOME=/home/git GITEA_WORK_DIR=/var/lib/gitea
          # If you want to bind Gitea to a port below 1024 uncomment
          # the two values below
          ###
          #CapabilityBoundingSet=CAP_NET_BIND_SERVICE
          #AmbientCapabilities=CAP_NET_BIND_SERVICE

          [Install]
          WantedBy=multi-user.target
    - name: Start Gitea service
      service:
        daemon_reload: yes
        name: gitea
        state: started
        enabled: yes

